rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own courses
    match /courses/{courseId} {
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         request.auth.uid in resource.data.collaborators);
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Marketplace courses are publicly readable
    match /marketplaceCourses/{courseId} {
      allow read: if true;
      allow write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // Course invitations
    match /courseInvitations/{invitationId} {
      // Sender can create and read their sent invitations
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.senderId;
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.uid == resource.data.recipientId);
      // Recipient can update (accept/decline) invitations sent to them
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.recipientId &&
        resource.data.status == 'pending';
    }
    
    // User profiles for email lookup
    match /userProfiles/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.auth.uid == userId;
    }
    
    // Collaborative courses
    match /collaborativeCourses/{courseId} {
      allow read, write: if request.auth != null && 
        (resource.data.creatorId == request.auth.uid || 
         request.auth.uid in resource.data.collaborators);
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.creatorId;
    }
  }
}